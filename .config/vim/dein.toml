[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_post_update = '''
let g:quickrun_config = {'*': {'hook/time/enable': '1'},}
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']


# display

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
let g:NERDTreeShowHidden = 1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
nnoremap <silent> <C-e> :NERDTreeToggle<CR>
'''

# [[plugins]]
# repo = 'ryanoasis/nerd-fonts'
# 
# [[plugins]]
# repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
\   'colorscheme': 'wombat'
\ }
'''


# LSP

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo='prabirshrestha/asyncomplete.vim'
hook_add = '''
"let g:asyncomplete_log_file = expand('~/asyncomplete.log')
let g:asyncomplete_auto_popup = 1
imap <c-space> <Plug>(asyncomplete_force_refresh)
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<cr>"
'''

[[plugins]]
repo='prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
" Diagnostics
let g:lsp_diagnostics_enabled = 0       " disable diagnostics support

" Signs
" let g:lsp_signs_enabled = 1             " enable signs
" let g:lsp_diagnostics_echo_cursor = 1   " enable echo under cursor when in normal mode
" let g:lsp_signs_error = {'text': '✗'}
" let g:lsp_signs_warning = {'text': '‼', 'icon': '/path/to/some/icon'} " icons require GUI
" let g:lsp_signs_hint = {'icon': '/path/to/some/other/icon'} " icons require GUI

" Highlights
" let g:lsp_highlights_enabled = 0
" let g:lsp_textprop_enabled = 0

" Virtual text
" let g:lsp_virtual_text_enabled = 0

" Highlight references
" let g:lsp_highlight_references_enabled = 1

" Debugging
let g:lsp_log_verbose = 1
let g:lsp_log_file = expand('~/.cache/vim/vim-lsp.log')

"if executable('typescript-language-server')
"    au User lsp_setup call lsp#register_server({
"        \ 'name': 'typescript-language-server',
"        \ 'cmd': {server_info->[&shell, &shellcmdflag, 'typescript-language-server --stdio']},
"        \ 'root_uri':{server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_file_directory(lsp#utils#get_buffer_path(), 'tsconfig.json'))},
"        \ 'whitelist': ['typescript', 'typescript.tsx', 'typescriptreact'],
"        \ })
"endif
"
"if executable('solargraph')
"    " gem install solargraph
"    au User lsp_setup call lsp#register_server({
"        \ 'name': 'solargraph',
"        \ 'cmd': {server_info->[&shell, &shellcmdflag, 'solargraph stdio']},
"        \ 'initialization_options': {"diagnostics": "true"},
"        \ 'whitelist': ['ruby'],
"        \ })
"endif
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'
